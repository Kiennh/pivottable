{"version":3,"sources":["plotly_renderers.coffee","plotly_renderers.min.js"],"names":["callWithJQuery","indexOf","item","i","l","this","length","pivotModule","exports","module","require","define","amd","jQuery","Plotly","$","makePlotlyChart","makePlotlyScatterChart","traceOptions","layoutOptions","transpose","pivotData","opts","colKeys","columns","d","data","datumKeys","defaults","fullAggName","groupByTitle","hAxisTitle","layout","result","rowKeys","rows","titleText","traceKeys","localeStrings","vs","by","plotly","plotlyConfig","extend","getRowKeys","getColKeys","push","aggregatorName","valAttrs","join","map","traceKey","datumKey","extendOptions","j","labels","len","trace","val","values","parseFloat","getAggregator","value","isFinite","name","call","type","x","y","rowAttrs","colAttrs","title","hovermode","width","window","innerWidth","height","innerHeight","Math","ceil","sqrt","grid","domain","row","floor","column","showlegend","xaxis","automargin","yaxis","appendTo","newPlot","detach","colKey","k","len1","renderArea","rowKey","v","text","mode","style","remove","pivotUtilities","plotly_renderers","Horizontal Bar Chart","orientation","barmode","Horizontal Stacked Bar Chart","Bar Chart","Col Chart","Stacked Bar Chart","Line Chart","Area Chart","stackgroup","Scatter Chart","Multiple Pie Chart","scalegroup","hoverinfo","textinfo"],"mappings":"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","file":"plotly_renderers.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\n  if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n    pivotModule require(\"jquery\"), require(\"plotly.js\")\n  else if typeof define is \"function\" and define.amd # AMD\n    define [\"jquery\", \"plotly.js\"], pivotModule\n# Plain browser env\n  else\n    pivotModule jQuery, Plotly\n\ncallWithJQuery ($, Plotly) ->\n  makePlotlyChart = (traceOptions = {}, layoutOptions = {}, transpose = false) ->\n    (pivotData, opts) ->\n      defaults =\n        localeStrings: {vs: \" of \", by: \"by\"}\n        plotly: {}\n        plotlyConfig: {}\n\n      opts = $.extend(true, {}, defaults, opts)\n\n      rowKeys = pivotData.getRowKeys()\n      colKeys = pivotData.getColKeys()\n      traceKeys = if transpose then colKeys else rowKeys\n      traceKeys.push([]) if traceKeys.length == 0\n      datumKeys = if transpose then rowKeys else colKeys\n      datumKeys.push([]) if datumKeys.length == 0\n\n      fullAggName = pivotData.aggregatorName\n      if pivotData.valAttrs.length\n        fullAggName += \"(#{pivotData.valAttrs.join(\", \")})\"\n\n      data = traceKeys.map (traceKey) ->\n        values = []\n        labels = []\n        for datumKey in datumKeys\n          val = parseFloat(pivotData.getAggregator(\n            if transpose then datumKey else traceKey,\n            if transpose then traceKey else datumKey\n          ).value())\n          values.push(if isFinite(val) then val else null)\n          labels.push(datumKey.join('-') || ' ')\n\n        trace = {name: traceKey.join('-') || fullAggName}\n        val extendOptions = if (traceKey in traceOptions) then traceOptions[traceKey] else traceOptions;\n        if extendOptions.type == \"pie\"\n          trace.values = values\n          trace.labels = if labels.length > 1 then labels else [fullAggName]\n        else\n          trace.x = if transpose then values else labels\n          trace.y = if transpose then labels else values\n        return $.extend(trace, extendOptions)\n\n      if transpose\n        hAxisTitle = pivotData.rowAttrs.join(\"-\")\n        groupByTitle = pivotData.colAttrs.join(\"-\")\n      else\n        hAxisTitle = pivotData.colAttrs.join(\"-\")\n        groupByTitle = pivotData.rowAttrs.join(\"-\")\n      titleText = fullAggName\n      titleText += \" #{opts.localeStrings.vs} #{hAxisTitle}\" if hAxisTitle != \"\"\n      titleText += \" #{opts.localeStrings.by} #{groupByTitle}\" if groupByTitle != \"\"\n\n      layout =\n        title: titleText\n        hovermode: 'closest'\n        width: window.innerWidth / 1.4\n        height: window.innerHeight / 1.4 - 50\n\n      if traceOptions.type == 'pie'\n        columns = Math.ceil(Math.sqrt(data.length))\n        rows = Math.ceil(data.length / columns)\n        layout.grid = {columns, rows}\n        for i, d of data\n          d.domain = {\n            row: Math.floor(i / columns),\n            column: i - columns * Math.floor(i / columns),\n          }\n          if data.length > 1\n            d.title = d.name\n        layout.showlegend = false if data[0].labels.length == 1\n      else\n        layout.xaxis =\n          title: if transpose then fullAggName else null\n          automargin: true\n        layout.yaxis =\n          title: if transpose then null else fullAggName\n          automargin: true\n\n\n      result = $(\"<div>\").appendTo $(\"body\")\n      Plotly.newPlot(result[0], data, $.extend(layout, layoutOptions, opts.plotly), opts.plotlyConfig)\n      return result.detach()\n\n  makePlotlyScatterChart = -> (pivotData, opts) ->\n    defaults =\n      localeStrings: {vs: \"vs\", by: \"by\"}\n      plotly: {}\n      plotlyConfig: {}\n\n    opts = $.extend(true, {}, defaults, opts)\n\n    rowKeys = pivotData.getRowKeys()\n    rowKeys.push [] if rowKeys.length == 0\n    colKeys = pivotData.getColKeys()\n    colKeys.push [] if colKeys.length == 0\n\n    data = {x: [], y: [], text: [], type: 'scatter', mode: 'markers'}\n\n    for rowKey in rowKeys\n      for colKey in colKeys\n        v = pivotData.getAggregator(rowKey, colKey).value()\n        if v?\n          data.x.push(colKey.join('-'))\n          data.y.push(rowKey.join('-'))\n          data.text.push(v)\n\n    layout = {\n      title: pivotData.rowAttrs.join(\"-\") + ' vs ' + pivotData.colAttrs.join(\"-\")\n      hovermode: 'closest',\n      xaxis: {title: pivotData.colAttrs.join('-'), automargin: true},\n      yaxis: {title: pivotData.rowAttrs.join('-'), automargin: true},\n      width: window.innerWidth / 1.5,\n      height: window.innerHeight / 1.4 - 50\n    }\n\n    renderArea = $(\"<div>\", style: \"display:none;\").appendTo $(\"body\")\n    result = $(\"<div>\").appendTo renderArea\n    Plotly.newPlot(result[0], [data], $.extend(layout, opts.plotly), opts.plotlyConfig)\n    result.detach()\n    renderArea.remove()\n    return result\n\n  $.pivotUtilities.plotly_renderers =\n    \"Horizontal Bar Chart\": makePlotlyChart({type: 'bar', orientation: 'h'},\n      {barmode: 'group'}, true)\n    \"Horizontal Stacked Bar Chart\": makePlotlyChart({type: 'bar', orientation: 'h'},\n      {barmode: 'relative'}, true)\n    \"Bar Chart\": makePlotlyChart({type: 'bar'}, {barmode: 'group'})\n    \"Col Chart\": makePlotlyChart({type: 'bar', orientation: 'h'}, {barmode: 'group'})\n    \"Stacked Bar Chart\": makePlotlyChart({type: 'bar'}, {barmode: 'relative'})\n    \"Line Chart\": makePlotlyChart()\n    \"Area Chart\": makePlotlyChart({stackgroup: 1})\n    \"Scatter Chart\": makePlotlyScatterChart()\n    'Multiple Pie Chart': makePlotlyChart(\n      {type: 'pie', scalegroup: 1, hoverinfo: 'label+value', textinfo: 'none'},\n      {}, true)\n","(function() {\n  var callWithJQuery,\n    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"), require(\"plotly.js\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\", \"plotly.js\"], pivotModule);\n    } else {\n      return pivotModule(jQuery, Plotly);\n    }\n  };\n\n  callWithJQuery(function($, Plotly) {\n    var makePlotlyChart, makePlotlyScatterChart;\n    makePlotlyChart = function(traceOptions, layoutOptions, transpose) {\n      if (traceOptions == null) {\n        traceOptions = {};\n      }\n      if (layoutOptions == null) {\n        layoutOptions = {};\n      }\n      if (transpose == null) {\n        transpose = false;\n      }\n      return function(pivotData, opts) {\n        var colKeys, columns, d, data, datumKeys, defaults, fullAggName, groupByTitle, hAxisTitle, i, layout, result, rowKeys, rows, titleText, traceKeys;\n        defaults = {\n          localeStrings: {\n            vs: \" of \",\n            by: \"by\"\n          },\n          plotly: {},\n          plotlyConfig: {}\n        };\n        opts = $.extend(true, {}, defaults, opts);\n        rowKeys = pivotData.getRowKeys();\n        colKeys = pivotData.getColKeys();\n        traceKeys = transpose ? colKeys : rowKeys;\n        if (traceKeys.length === 0) {\n          traceKeys.push([]);\n        }\n        datumKeys = transpose ? rowKeys : colKeys;\n        if (datumKeys.length === 0) {\n          datumKeys.push([]);\n        }\n        fullAggName = pivotData.aggregatorName;\n        if (pivotData.valAttrs.length) {\n          fullAggName += \"(\" + (pivotData.valAttrs.join(\", \")) + \")\";\n        }\n        data = traceKeys.map(function(traceKey) {\n          var datumKey, extendOptions, j, labels, len, trace, val, values;\n          values = [];\n          labels = [];\n          for (j = 0, len = datumKeys.length; j < len; j++) {\n            datumKey = datumKeys[j];\n            val = parseFloat(pivotData.getAggregator(transpose ? datumKey : traceKey, transpose ? traceKey : datumKey).value());\n            values.push(isFinite(val) ? val : null);\n            labels.push(datumKey.join('-') || ' ');\n          }\n          trace = {\n            name: traceKey.join('-') || fullAggName\n          };\n          val(extendOptions = (indexOf.call(traceOptions, traceKey) >= 0) ? traceOptions[traceKey] : traceOptions);\n          if (extendOptions.type === \"pie\") {\n            trace.values = values;\n            trace.labels = labels.length > 1 ? labels : [fullAggName];\n          } else {\n            trace.x = transpose ? values : labels;\n            trace.y = transpose ? labels : values;\n          }\n          return $.extend(trace, extendOptions);\n        });\n        if (transpose) {\n          hAxisTitle = pivotData.rowAttrs.join(\"-\");\n          groupByTitle = pivotData.colAttrs.join(\"-\");\n        } else {\n          hAxisTitle = pivotData.colAttrs.join(\"-\");\n          groupByTitle = pivotData.rowAttrs.join(\"-\");\n        }\n        titleText = fullAggName;\n        if (hAxisTitle !== \"\") {\n          titleText += \" \" + opts.localeStrings.vs + \" \" + hAxisTitle;\n        }\n        if (groupByTitle !== \"\") {\n          titleText += \" \" + opts.localeStrings.by + \" \" + groupByTitle;\n        }\n        layout = {\n          title: titleText,\n          hovermode: 'closest',\n          width: window.innerWidth / 1.4,\n          height: window.innerHeight / 1.4 - 50\n        };\n        if (traceOptions.type === 'pie') {\n          columns = Math.ceil(Math.sqrt(data.length));\n          rows = Math.ceil(data.length / columns);\n          layout.grid = {\n            columns: columns,\n            rows: rows\n          };\n          for (i in data) {\n            d = data[i];\n            d.domain = {\n              row: Math.floor(i / columns),\n              column: i - columns * Math.floor(i / columns)\n            };\n            if (data.length > 1) {\n              d.title = d.name;\n            }\n          }\n          if (data[0].labels.length === 1) {\n            layout.showlegend = false;\n          }\n        } else {\n          layout.xaxis = {\n            title: transpose ? fullAggName : null,\n            automargin: true\n          };\n          layout.yaxis = {\n            title: transpose ? null : fullAggName,\n            automargin: true\n          };\n        }\n        result = $(\"<div>\").appendTo($(\"body\"));\n        Plotly.newPlot(result[0], data, $.extend(layout, layoutOptions, opts.plotly), opts.plotlyConfig);\n        return result.detach();\n      };\n    };\n    makePlotlyScatterChart = function() {\n      return function(pivotData, opts) {\n        var colKey, colKeys, data, defaults, j, k, layout, len, len1, renderArea, result, rowKey, rowKeys, v;\n        defaults = {\n          localeStrings: {\n            vs: \"vs\",\n            by: \"by\"\n          },\n          plotly: {},\n          plotlyConfig: {}\n        };\n        opts = $.extend(true, {}, defaults, opts);\n        rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) {\n          rowKeys.push([]);\n        }\n        colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) {\n          colKeys.push([]);\n        }\n        data = {\n          x: [],\n          y: [],\n          text: [],\n          type: 'scatter',\n          mode: 'markers'\n        };\n        for (j = 0, len = rowKeys.length; j < len; j++) {\n          rowKey = rowKeys[j];\n          for (k = 0, len1 = colKeys.length; k < len1; k++) {\n            colKey = colKeys[k];\n            v = pivotData.getAggregator(rowKey, colKey).value();\n            if (v != null) {\n              data.x.push(colKey.join('-'));\n              data.y.push(rowKey.join('-'));\n              data.text.push(v);\n            }\n          }\n        }\n        layout = {\n          title: pivotData.rowAttrs.join(\"-\") + ' vs ' + pivotData.colAttrs.join(\"-\"),\n          hovermode: 'closest',\n          xaxis: {\n            title: pivotData.colAttrs.join('-'),\n            automargin: true\n          },\n          yaxis: {\n            title: pivotData.rowAttrs.join('-'),\n            automargin: true\n          },\n          width: window.innerWidth / 1.5,\n          height: window.innerHeight / 1.4 - 50\n        };\n        renderArea = $(\"<div>\", {\n          style: \"display:none;\"\n        }).appendTo($(\"body\"));\n        result = $(\"<div>\").appendTo(renderArea);\n        Plotly.newPlot(result[0], [data], $.extend(layout, opts.plotly), opts.plotlyConfig);\n        result.detach();\n        renderArea.remove();\n        return result;\n      };\n    };\n    return $.pivotUtilities.plotly_renderers = {\n      \"Horizontal Bar Chart\": makePlotlyChart({\n        type: 'bar',\n        orientation: 'h'\n      }, {\n        barmode: 'group'\n      }, true),\n      \"Horizontal Stacked Bar Chart\": makePlotlyChart({\n        type: 'bar',\n        orientation: 'h'\n      }, {\n        barmode: 'relative'\n      }, true),\n      \"Bar Chart\": makePlotlyChart({\n        type: 'bar'\n      }, {\n        barmode: 'group'\n      }),\n      \"Col Chart\": makePlotlyChart({\n        type: 'bar',\n        orientation: 'h'\n      }, {\n        barmode: 'group'\n      }),\n      \"Stacked Bar Chart\": makePlotlyChart({\n        type: 'bar'\n      }, {\n        barmode: 'relative'\n      }),\n      \"Line Chart\": makePlotlyChart(),\n      \"Area Chart\": makePlotlyChart({\n        stackgroup: 1\n      }),\n      \"Scatter Chart\": makePlotlyScatterChart(),\n      'Multiple Pie Chart': makePlotlyChart({\n        type: 'pie',\n        scalegroup: 1,\n        hoverinfo: 'label+value',\n        textinfo: 'none'\n      }, {}, true)\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=plotly_renderers.js.map\n"]}